// This file is generated by Firebase Extensions Studio
'use server';
/**
 * @fileOverview Filters aggregated RSS feeds to identify and prioritize the most relevant and important news articles for reformatting.
 *
 * - filterRelevantNews - A function that handles the filtering process.
 * - FilterRelevantNewsInput - The input type for the filterRelevantNews function.
 * - FilterRelevantNewsOutput - The return type for the filterRelevantNews function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FilterRelevantNewsInputSchema = z.object({
  articles: z.array(
    z.object({
      title: z.string().describe('The title of the news article.'),
      description: z.string().describe('A short description or summary of the article.'),
      link: z.string().describe('The URL of the news article.'),
      source: z.string().describe('The source or region of the news article (e.g., Korea, China, USA).'),
    })
  ).describe('An array of news articles from various RSS feeds.'),
});
export type FilterRelevantNewsInput = z.infer<typeof FilterRelevantNewsInputSchema>;

const FilterRelevantNewsOutputSchema = z.array(
  z.object({
    title: z.string().describe('The title of the news article.'),
    description: z.string().describe('A short description or summary of the article.'),
    link: z.string().describe('The URL of the news article.'),
    source: z.string().describe('The source or region of the news article.'),
    relevanceScore: z.number().describe('A score indicating the relevance and importance of the article (0-1).'),
    reason: z.string().describe('The reason why this article was selected'),
  })
).describe('An array of the most relevant news articles, with a relevance score for each.');
export type FilterRelevantNewsOutput = z.infer<typeof FilterRelevantNewsOutputSchema>;

export async function filterRelevantNews(input: FilterRelevantNewsInput): Promise<FilterRelevantNewsOutput> {
  return filterRelevantNewsFlow(input);
}

const filterRelevantNewsPrompt = ai.definePrompt({
  name: 'filterRelevantNewsPrompt',
  input: {schema: FilterRelevantNewsInputSchema},
  output: {schema: FilterRelevantNewsOutputSchema},
  prompt: `You are an AI news aggregator that sifts through news articles from various regions and determines the most relevant and important ones.

You will be provided with an array of news articles, each containing a title, description, link, and source.

Your task is to:
1.  Assess the relevance and importance of each article based on its potential impact and interest to a global audience.
2.  Assign a relevance score (between 0 and 1) to each article.
3.  Create output array of news articles, with relevance score and reasoning why this article was selected.

Consider factors such as:
*   The significance of the events described in the article.
*   The potential impact on international relations, global economy, or other areas of broad interest.
*   The uniqueness of the story (i.e., whether it's a novel development or a repetition of existing news).

Articles: {{{articles}}}
`, 
});

const filterRelevantNewsFlow = ai.defineFlow(
  {
    name: 'filterRelevantNewsFlow',
    inputSchema: FilterRelevantNewsInputSchema,
    outputSchema: FilterRelevantNewsOutputSchema,
  },
  async input => {
    const {output} = await filterRelevantNewsPrompt(input);
    return output!;
  }
);
